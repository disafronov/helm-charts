# Default values for default chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # name: ""

autoscaling: {}
  # enabled: true
  # minReplicas: 1
  # maxReplicas: 10
  # targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# replicaCount: 1

podAnnotations: {}

imagePullSecrets: []

podSecurityContext: {}
  # fsGroup: 2000

initContainers: []

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

image:
  repository: ""
  # tag: ""

# command: []

# args: []

# containerPort: ""
# containerPortProtocol: ""

# ports: []

# startupProbe:
#   tcpSocket:
#     port: default
#   initialDelaySeconds: 10
#   failureThreshold: 29
# livenessProbe:
#   httpGet:
#     path: /
#     port: default
#   initialDelaySeconds: 30
#   failureThreshold: 5
#   timeoutSeconds: 5
# readinessProbe:
#   httpGet:
#     path: /
#     port: default
#   failureThreshold: 3
#   periodSeconds: 3

env: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

pv: {}
  # enabled: true
  # size: 1Gi
  # mountPath: /srv

sidecars: []

nodeSelector: {}

affinity: {}

tolerations: []

tty:
  enabled: false

# service:
#   type: ClusterIP
#   port: 80

ingress: {}
  # enabled: true
  # ingressClassName: ""
  # annotations: {}
  #   # kubernetes.io/ingress.class: nginx
  #   # kubernetes.io/tls-acme: "true"
  # rules:
  #   - host: chart-example.local
  #     paths:
  #       - path: /
  #         pathType: ImplementationSpecific
  # tls: []
  # #  - secretName: chart-example-tls
  # #    hosts:
  # #      - chart-example.local

# migration:
#   enabled: true
#   backoffLimit: 3
#   activeDeadlineSeconds: 3600
#   ttlSecondsAfterFinished: 86400
#   # resources:
#   #   limits:
#   #     cpu: 500m
#   #     memory: 512Mi
#   #   requests:
#   #     cpu: 200m
#   #     memory: 256Mi
#   # command: ["/bin/sh"]
#   # args: ["-c", "migrate.sh"]
#   # sidecars: []
#   # volumes:
#   #   - name: data
#   #     emptyDir: {}
#   # volumeMounts:
#   #   - name: data
#   #     mountPath: /data

# cronjob:
#   enabled: true
#   schedule: "0 2 * * *"  # Run daily at 02:00 UTC
#   concurrencyPolicy: Forbid
#   successfulJobsHistoryLimit: 3
#   failedJobsHistoryLimit: 1
#   backoffLimit: 3
#   activeDeadlineSeconds: 3600
#   ttlSecondsAfterFinished: 86400
#   # resources:
#   #   limits:
#   #     cpu: 500m
#   #     memory: 512Mi
#   #   requests:
#   #     cpu: 200m
#   #     memory: 256Mi
#   # command: ["/bin/sh"]
#   # args: ["-c", "backup.sh"]
#   # sidecars: []
#   # volumes:
#   #   - name: cache
#   #     emptyDir: {}
#   # volumeMounts:
#   #   - name: cache
#   #     mountPath: /cache
