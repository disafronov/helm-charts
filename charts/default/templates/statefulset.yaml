{{- if and .Values.deploymentType (eq .Values.deploymentType "StatefulSet") }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "default.fullname" . }}
  labels:
    {{- include "default.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "default.svc-headless-name" . }}
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.deployStrategy }}
  strategy:
    type: {{ .Values.deployStrategy }}
    {{- if eq .Values.deployStrategy "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ default 1 .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ default 0 .Values.rollingUpdate.maxUnavailable }}
    {{- end }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "default.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "default.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "default.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.containerPort .Values.ports }}
          ports:
          {{- if .Values.containerPort }}
            - name: default
              containerPort: {{ .Values.containerPort }}
              protocol: TCP
          {{- end }}
          {{- if .Values.ports }}
          {{- range $k, $v := .Values.ports }}
            - containerPort: {{ $k | trim }}
              protocol: {{ default "TCP" $v | trim }}
          {{- end }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.env }}
          env:
          {{- range $k, $v := .Values.env }}
            - name: {{ $k | trim }}
              value: {{ $v | trim | quote }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmp
            - name: {{ .Chart.Name }}
              mountPath: {{ default "/srv" .Values.pvMount }}
        {{- with .Values.sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: {{ default "1Gi" .Values.tmpSize }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Chart.Name }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ default "1Gi" .Values.pvSize }}
{{- end }}
